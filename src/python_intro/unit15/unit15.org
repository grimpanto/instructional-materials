

#+TITLE: Python \hfill Unit 15\linebreak \small...für Anfänger
#+AUTHOR: Dr. Günter Kolousek
#+OPTIONS: H:1 toc:nil
#+LATEX_CLASS: beamer
#+LATEX_CLASS_OPTIONS: [presentation]
#+BEAMER_THEME: Execushares
#+COLUMNS: %45ITEM %10BEAMER_ENV(Env) %10BEAMER_ACT(Act) %4BEAMER_COL(Col) %8BEAMER_OPT(Opt)

#+LATEX_HEADER:\usepackage{pgfpages}
# +LATEX_HEADER:\pgfpagesuselayout{2 on 1}[a4paper,border shrink=5mm]
# +LATEX: \mode<handout>{\setbeamercolor{background canvas}{bg=black!5}}
#+LATEX_HEADER:\usepackage{xspace}
#+LATEX: \newcommand{\cpp}{C++\xspace}
#+LATEX: \setminted{escapeinside=´´}

* Kommandozeilenverarbeitung - 1
#+BEGIN_SRC python
# cmd.py
import sys

print(sys.argv)
#+END_SRC

#+BEGIN_EXAMPLE
$ python cmd.py
['cmd.py']
$ python cmd.py abc def
['cmd.py', 'abc', 'def']
#+END_EXAMPLE

* Kommandozeilenverarbeitung - 2
#+BEGIN_SRC python
import sys

if __name__ == "__main__":
    print(sys.argv, len(sys.argv))

    i = 1
    while i < len(sys.argv):
        print(sys.argv[i])
        i += 1
#+END_SRC

#+BEGIN_EXAMPLE
$ python cmd.py abc def
['cmd.py', 'abc', 'def'] 3
abc
def
#+END_EXAMPLE

* Kommandozeilenverarbeitung - 3
- Parameter bzw. Argumente
  - in spitzen Klammern oder zur Gänze in Großbuchstaben
- Optionen
  - mit =-=: Kurze Form, wie =-a=, =-b=, =-c= oder =-abc=
  - mit =--=: Lange Form, kann Wert haben, wie =--input ARG= oder ~--input=ARG~
    muss jedoch nicht =--jump=
- in eckigen Klammern bedeutet optional, wie =[<number>]=
- =|= bedeutet Variante, wie in =<name>|<number>=
- =...= bedeutet "beliebig oft", wie in =<name>...=
- in runden Klammern zum Gruppieren, wie in =(<x> <y>)...=
  
* Sortieren mittels BubbleSort - 1
1. Beginne vorne.
2. Vergleiche jeweils 2 benachbarte Zahlen und vertausche diese,
   wenn diese nicht in der richtigen Reihenfolge sind. Danach
   ist sicher die größte Zahl am rechten Ende, aber alle anderen
   Zahlen sind unsortiert.
3. Beginne deshalb wieder von vorne
- Name: Jeweils größtes Element wie eine Blase an die Oberfläche
- Beispiel
  - =[15, 2, 43, 17, 4, 8, 47]=
  - =[2, 15, 43, 17, 4, 8, 47]=
  - =[2, 15, 43, 17, 4, 8, 47]=
  - =[2, 15, 17, 43, 4, 8, 47]=
  - ...

* Sortieren mittels BubbleSort - 2
- Prinzip
  #+begin_example
  für jedes Element der Liste:
    für jedes y der Liste bis zum Vorletzten:
      wenn y größer ist als dessen Nachfolger:
        vertausche y mit seinem Nachfolger
  #+end_example
- Algorithmus
  #+begin_src python
  def bubble(lst):
    for x in lst[:-1]:
      for i, y in enumerate(lst[:-1]):
        if y > lst[i + 1]:
          lst[i], lst[i+1] = lst[i+1], lst[i]
    return lst
  #+end_src
